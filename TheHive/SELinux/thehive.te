###################################################################################################################################
### Title: The Hive SELinux policy module                                                                                       ###
### File Type: Type Enforcement                                                                                                 ###
### Author: Jeffrey Everling                                                                                                    ###
### Description: This is a SELinux policy module for The Hive (https://thehive-project.org/). It is still under development and ###
### there are no guarantees that this is a perfect SELinux policy module. Suggestions are welcome!                              ###
###################################################################################################################################

### TO DO:
# - Try to split the executation phase (running the thehive script in bin) with the operational phase (running as a JAVA process)
#   This should allow the process to run in a much more restricted domain
# - Investigate and optimize config below as there is room for improvement

policy_module(thehive,1.0.0)

########################################
#
# Requirements
#
require {
        type bin_t;
        type locale_t;
        type cslistener_port_t;
        type autofs_t;
        type proc_net_t;
        type net_conf_t;
        type sysctl_vm_t;
        type user_runtime_t;
        type var_lock_t;
        type sysfs_t;
        type home_root_t;
        type tmp_t;
        type urandom_device_t;
        type sysctl_net_t;
        type fixed_disk_device_t;
        type hugetlbfs_t;
        type user_home_dir_t;
        type var_log_t;
        type usr_t;
        type shell_exec_t;
        type sysctl_vm_overcommit_t;
        type pstore_t;
        type tmpfs_t;
        type sysctl_fs_t;
        type debugfs_t;
        type sysctl_t;
        type user_runtime_root_t;
        type random_device_t;
        type java_exec_t;
        type node_t;
        type elasticsearch_t;
        type elasticsearch_port_t;
        type cortex_port_t;
        #class sock_file unlink;
        #class chr_file { getattr open read };
        #class lnk_file read;
        #class file { create execute execute_no_trans getattr open read rename unlink write };
        #class udp_socket { create ioctl };
}


########################################
#
# Declarations
#

type thehive_t;
domain_type(thehive_t)

type thehive_base_t;
files_type(thehive_base_t)

#Define a port type
type thehive_port_t;
corenet_port(thehive_port_t);

type thehive_exec_t;
init_daemon_domain(thehive_t, thehive_exec_t)

### pid files
type thehive_var_run_t;
files_pid_file(thehive_var_run_t)

### /etc files
type thehive_etc_t;
files_type(thehive_etc_t)

### log files
type thehive_var_log_t;
# Enable generic log permissions to The Hive logging
logging_log_file(thehive_var_log_t)

### var/lib files
type thehive_var_lib_t;
files_type(thehive_var_lib_t)

########################################
#
# thehive local policy
#

### Some common macros (you might be able to remove some)
#############Can be made more specific by making the /etc/thehive folder/files of a specific type
files_read_etc_files(thehive_t)
libs_use_ld_so(thehive_t)
libs_use_shared_libs(thehive_t)
#miscfiles_read_localization(thehive_t)

### internal communication is often done using fifo and unix sockets.
allow thehive_t self:tcp_socket accept;
allow thehive_t self:fifo_file { read write };
allow thehive_t self:unix_stream_socket create_stream_socket_perms;
allow thehive_t self:process execmem;

### The Hive /etc files
allow thehive_t thehive_etc_t:dir search;
allow thehive_t thehive_etc_t:file { getattr open read };
allow thehive_t thehive_etc_t:lnk_file read;

### pid file
allow thehive_t thehive_var_run_t:file manage_file_perms;
allow thehive_t thehive_var_run_t:sock_file manage_file_perms;
allow thehive_t thehive_var_run_t:dir rw_dir_perms;
files_pid_filetrans(thehive_t,thehive_var_run_t, { file sock_file })

# Base files of Cortex
allow thehive_t thehive_base_t:dir { getattr open read search };
allow thehive_t thehive_base_t:file { getattr open read };
allow thehive_t thehive_base_t:lnk_file read;

### log files
allow thehive_t thehive_var_log_t:lnk_file read;
allow thehive_t thehive_var_log_t:file create_file_perms;
allow thehive_t thehive_var_log_t:sock_file create_file_perms;
allow thehive_t thehive_var_log_t:dir { rw_dir_perms setattr };
logging_log_filetrans(thehive_t,thehive_var_log_t,{ sock_file file dir })

# var/lib files for thehive
allow thehive_t thehive_var_lib_t:file { create_file_perms read };
allow thehive_t thehive_var_lib_t:sock_file { create_file_perms read };
allow thehive_t thehive_var_lib_t:dir { create_dir_perms search};
files_var_lib_filetrans(thehive_t,thehive_var_lib_t, { file dir sock_file })

## Networking basics (adjust to your needs!)
#sysnet_dns_name_resolve(thehive_t)
#corenet_tcp_sendrecv_all_if(thehive_t)
#corenet_tcp_sendrecv_all_nodes(thehive_t)
#corenet_tcp_sendrecv_all_ports(thehive_t)
#corenet_non_ipsec_sendrecv(thehive_t)
## if it is a network daemon, consider these:
#corenet_tcp_bind_all_ports(thehive_t)
#corenet_tcp_bind_all_nodes(thehive_t)

########################################
#
# The Hive Additional rules
#

### Allow The Hive to use JAVA
allow thehive_t java_exec_t:file { execute execute_no_trans getattr open read };

#Allow The Hive to run basic commands
allow thehive_t bin_t:file { execute execute_no_trans getattr open read };
allow thehive_t bin_t:lnk_file read;
allow thehive_t bin_t:dir search;

# Allow The Hive to use bash
allow thehive_t shell_exec_t:file { execute execute_no_trans getattr open read };

#Allow The Hive to access Locale
allow thehive_t locale_t:file { getattr open read };
allow thehive_t locale_t:lnk_file read;
allow thehive_t locale_t:dir search;

#Search paths of this type
allow thehive_t home_root_t:dir search;
allow thehive_t sysctl_t:dir search;
allow thehive_t user_runtime_root_t:dir search;

#Allow The Hive to access resolv.conf (JAVA)
allow thehive_t net_conf_t:file { getattr open read };

### Allow to open port 9000 (This is a reserved port in the default SElinux policy, so the port type is not custom to The Hive)
allow thehive_t cslistener_port_t:tcp_socket { listen accept name_bind };
allow thehive_t node_t:tcp_socket node_bind;

### Allow TheHive to connect to elasticsearch
allow thehive_t elasticsearch_port_t:tcp_socket name_connect;
#Need to figure out if I can translate this to ES port types

### Allow TheHive to connect to Cortex
allow thehive_t cortex_port_t:tcp_socket name_connect;

### Allow access to the network information within /proc
allow thehive_t proc_net_t:file { getattr open read };

# Init script handling
init_use_fds(thehive_t)
init_use_script_ptys(thehive_t)
domain_use_interactive_fds(thehive_t)

#All required getattr permissions
allow thehive_t autofs_t:dir getattr;
allow thehive_t bin_t:dir getattr;
allow thehive_t debugfs_t:dir getattr;
allow thehive_t home_root_t:dir getattr;
allow thehive_t hugetlbfs_t:dir getattr;
allow thehive_t pstore_t:dir getattr;
allow thehive_t sysctl_t:dir getattr;
allow thehive_t tmpfs_t:dir getattr;
allow thehive_t var_lock_t:dir getattr;
allow thehive_t fixed_disk_device_t:blk_file getattr;
allow thehive_t user_runtime_root_t:dir getattr;
allow thehive_t user_runtime_t:dir getattr;

#Allow thehive to work in /tmp
allow thehive_t tmp_t:dir { add_name create read remove_name write };
allow thehive_t tmp_t:file { create getattr open read unlink write };
allow thehive_t tmp_t:dir rmdir;

### Allow access to the information within /proc and /sys (https://en.wikipedia.org/wiki/Sysfs)
allow thehive_t sysctl_fs_t:dir { getattr search };
allow thehive_t sysctl_net_t:dir search;
allow thehive_t sysctl_net_t:file { getattr open read };
allow thehive_t sysctl_vm_overcommit_t:file { open read };
allow thehive_t sysctl_vm_t:dir search;
allow thehive_t sysfs_t:dir read;
allow thehive_t sysfs_t:file { open read };
allow thehive_t sysfs_t:lnk_file read;

# Allow The Hive to use /dev/random and /dev/urandom
allow thehive_t random_device_t:chr_file { getattr open read };
allow thehive_t urandom_device_t:chr_file { getattr open read };

#Allow required actions on its own domain (execmem is considered tricky)
allow thehive_t self:fifo_file { getattr ioctl };
allow thehive_t self:process { execmem getsched };
allow thehive_t self:tcp_socket { listen bind connect create getattr getopt read setopt write };
allow thehive_t self:udp_socket { create ioctl };

########################################
### Uninvestigated audit2allow rules ###
########################################

allow thehive_t var_log_t:file open;